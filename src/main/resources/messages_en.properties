
user.data.mycerts.headline=My Certificates
user.data.mycerts.nocerts=No certificates found
user.data.myreq.headline=My Certificate Requests
user.data.myreq.noreq=No open requests
user.data.myreq.rejected=Rejected:
user.data.myreq.accepted=Accepted:
user.data.mycerts.action.requestrenew=request renewal
user.data.mycerts.renew.requested=renewal request pending
user.data.mycerts.renewed=Certificate has been renewed

global.welcome.headline=Welcome back
global.info.headline=Info
global.info.description.gencsr= A certificate cannot be created unilaterally! As a user you can only issue a <strong>request for a certificate</strong> (a so-called CSR), for the time being! \
  This request has to be <strong>approved by an administrator</strong> in the next step.<br/> In this operation the certificate will be created and can be fetched/downloaded by the user afterwards. <br/><br/>\
  So in order to get a certificate, you first need to create a private key and the mentioned CSR (Certificate Signing Request) on your machine. \
  To make things easy, we created a script for you, that you just need to run on a commandline (requires bash and openssl). <br/><br/> \
  <strong>The script DOES NOT create a certificate!!!! Only a REQUEST for a certificate!!!!</strong> There is no use to it, other than uploading it right here. \
  And if we feel generous, we'll allot a certificate to you, according to your request.

global.info.description=The created certificate is in a specific format ("X.509"). But some applications, like most browsers, require it to be in format "PKCS#12"!<br/> \
  The certificate you've got is of type "X.509". In order to generate a cert of type "PKCS#12", you need the CA-Certificate. <a href="/intermediate-ca.cert.pem">You can download it here.</a><br/>\
  You can then generate the PKCS#12-Certificate with the following command:
global.info.description.code=openssl pkcs12 -export -out user-cert.pfx -inkey <span class="fsPathText">/path/to/user.key.pem</span> -in <span class="fsPathText">/path/to/user.crt.pem</span> \
   -certfile <span class="fsPathText">/path/to/ca.crt.pem</span>
global.info.description.script.download=The script can be downloaded here.

global.info.downloads.headline=Downloads
global.info.downloads.cacert=CA Certificate
global.info.downloads.gencsr=Clientside Certificate-Key-Generator

global.info.renewal.headline=Renew Certificate
global.info.renewal.description=On renewal, the current certificate <strong>will become invalid</strong> and a <strong>new certificate will be created</strong>! <br/> \
  So in most cases, a renewal is only reasonable, if the current certificate is about to expire. <br/><br/> \
  Think twice before requesting a renewal for one of your certificates!
global.info.renewal.warning=WARNING: The current Certificate will be revoked and a new one will be created! \n\n Are you sure to request a renewal?

global.admin.interface=Admin UI
global.shared.certs=Shared Certificates
admin.ui.back=Back to User-Portal
admin.ui.requests.headline=Pending certificate-requests
admin.ui.requests.user=User
admin.ui.requests.date=Date
admin.ui.requests.created=Created
admin.ui.requests.renewed=Renewed
admin.ui.requests.filename=Filename
admin.ui.requests.actions=Actions
admin.ui.requests.nopending=No pending certificate-requests
admin.ui.requests.action.reject=Reject
admin.ui.requests.action.sign=Sign
admin.ui.signed.headline=Signed Certificates
admin.ui.signed.nosigned=No signed certificates
admin.ui.signed.action.revoke=Revoke
admin.ui.signed.action.renew=Renew
admin.ui.signed.renewal.requested=User requested renewal
admin.ui.revoked.headline=Revoked Certificates
admin.ui.revoked.nocerts=No revoked Certificates

user.request.headline=New Certificate-Request
user.request.description=Choose how to issue the request
user.request.via.file.upload=<em>Either</em>: upload the CSR-File
user.request.via.copy.paste=<em>Or</em>: paste the CSR-File's content
user.request.file.upload=Create request from file
user.request.file.invalid=Upload of CSR failed! Invalid File: {0}
user.request.file.error=Upload of CSR failed! Error was: {0}
user.request.file.success=You successfully uploaded your CSR!
user.request.text.upload=Create request from text
user.request.text.invalid=Upload of CSR Data failed! Invalid CSR-format!
user.request.text.error=Upload of CSR Data failed! Error was: {0}
user.request.text.success=You successfully uploaded your CSR Data!
user.request.renew.cert.invalid=Request renewal failed! Invalid Certificate specified: {0}
user.request.renew.error=Unable to request renewal! An Error occurred: {0}
user.request.renew.success=Renewal has been requested!

user.request.renew.notification.subject=PKI: Request to renew Certificate
user.request.renew.notification.text=User {0} has requested the renewal of his Certificate. \n\
  The Certificate in question is {1} \n\
  \n\
  Act now: https://_REPLACEME_/admin \n\
  ...and inform the User afterwards!

user.request.notification.subject=PKI: Request for new Certificate
user.request.notification.text=User {0} has uploaded a CSR. \n\
  \n\
  Sign it now: https://_REPLACEME_/admin \n\
  ...and inform the User afterwards!


shared.certs.create.headline=Create new key and CSR
shared.certs.create.label=Application Name
shared.certs.create.button=Create shared App
shared.certs.list.headline=Shared Application Certs
shared.certs.list.appname=App Name
shared.certs.list.created=Created
shared.certs.list.renewed=Renewed
shared.certs.list.keyfilename=Keyfile
shared.certs.list.csrfilename=CSR Filename
shared.certs.list.crtfilename=Cert Filename
shared.certs.list.actions=Actions
shared.certs.list.nocerts=No shared Certificates
shared.certs.appname.invalid=Application Name must only contain alphanumeric chars
shared.certs.creation.failed=Failed to create the application shared certificate! <br/>Error message was: {0}
shared.certs.creation.success=The shared app has been created successfully.<br/>The password for the key-file is <strong>{0}</strong> - put it into Keeper! It will not be shown again!
shared.certs.request.renew.cert.invalid=Request renewal failed! Invalid Certificate specified: {0}
shared.certs.request.renew.error=Unable to request renewal! An Error occurred: {0}
shared.certs.request.renew.success=Renewal has been requested!
